@model PaginatedList<StudentManagerMVC.Models.Student>

@{
    ViewData["Title"] = "Students Index";
    var placesOfBirth = ViewBag.PlacesOfBirth as List<string>;
}

<h1>Students Index</h1>
<a asp-action="Create" class="btn btn-primary mb-3">Create New Student</a>
<form method="get" asp-controller="Students" asp-action="Index">
    <div class="form-group">
        <label for="filterField">Select Filter Field:</label>
        <select id="filterField" name="filterField" class="form-control">
            <option value="">None</option>
            <option value="Gender">Gender</option>
            <option value="Oldest">Oldest Student</option>
            <option value="FullName">Full Name</option>
            <option value="BirthYear">Birth Year</option>
            <option value="PlaceOfBirth">Place of Birth</option>
        </select>
    </div>
    <div class="form-group" id="genderCriteriaGroup" style="display:none;">
        <label for="genderCriteria">Select Gender:</label>
        <select id="genderCriteria" name="filterCriteria" class="form-control">
            <option value="Male">Male</option>
            <option value="Female">Female</option>
        </select>
    </div>
    <div class="form-group" id="placeOfBirthCriteriaGroup" style="display:none;">
        <label for="placeOfBirthCriteria">Select Place of Birth:</label>
        <select id="placeOfBirthCriteria" name="filterCriteria" class="form-control">
            @if (placesOfBirth != null)
            {
                foreach (var place in placesOfBirth)
                {
                    <option value="@place">@place</option>
                }
            }
        </select>
    </div>
    <div class="form-group" id="fullNameGroup" style="display:none;">
        <label for="fullName">Enter Full Name:</label>
        <input type="text" id="fullName" name="filterValue" class="form-control" placeholder="Enter Full Name" />
    </div>
    <div class="form-group" id="filterValueGroup" style="display:none;">
        <label for="filterValue">Enter Filter Value:</label>
        <input type="text" id="filterValue" name="filterValue" class="form-control" placeholder="Enter Birth Year" />
    </div>

    <button type="submit" class="btn btn-primary">Filter</button> <a asp-action="Index" class="btn btn-success">Back to Full List</a>
</form>

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.First().ID)</th>
            <th>@Html.DisplayNameFor(model => model.First().LastName)</th>
            <th>@Html.DisplayNameFor(model => model.First().FirstName)</th>
            <th>@Html.DisplayNameFor(model => model.First().DateOfBirth)</th>
            <th>@Html.DisplayNameFor(model => model.First().Gender)</th>
            <th>@Html.DisplayNameFor(model => model.First().PlaceOfBirth)</th>
            <th>@Html.DisplayNameFor(model => model.First().Mobile)</th>
            <th>@Html.DisplayNameFor(model => model.First().IsGraduated)</th>
            <th>@Html.DisplayNameFor(model => model.First().FullName)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.ID)</td>
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                <td>@Html.DisplayFor(modelItem => item.DateOfBirth)</td>
                <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                <td>@Html.DisplayFor(modelItem => item.PlaceOfBirth)</td>
                <td>@Html.DisplayFor(modelItem => item.Mobile)</td>
                <td>@Html.DisplayFor(modelItem => item.IsGraduated)</td>
                <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-outline-info">Details</a> |
                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-outline-warning">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@item.ID" class="btn btn-outline-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)" 
    asp-route-pageSize="@ViewData["PageSize"]" class="btn btn-primary @(Model.HasPreviousPage ? "" : "disabled")">Previous</a>
    <span>Page @Model.PageIndex of @Model.TotalPages</span>
    <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)" 
    asp-route-pageSize="@ViewData["PageSize"]" class="btn btn-primary @(Model.HasNextPage ? "" : "disabled")">Next</a>
</div>

<script>
    document.getElementById('filterField').addEventListener('change', function () {
        var genderCriteriaGroup = document.getElementById('genderCriteriaGroup');
        var placeOfBirthCriteriaGroup = document.getElementById('placeOfBirthCriteriaGroup');
        var filterValueGroup = document.getElementById('filterValueGroup');
        var fullNameGroup = document.getElementById('fullNameGroup');

        genderCriteriaGroup.style.display = 'none';
        placeOfBirthCriteriaGroup.style.display = 'none';
        filterValueGroup.style.display = 'none';
        fullNameGroup.style.display = 'none';

        // Reset names to avoid multiple inputs with the same name
        document.getElementById('genderCriteria').name = '';
        document.getElementById('placeOfBirthCriteria').name = '';
        document.getElementById('filterValue').name = '';
        document.getElementById('fullName').name = '';

        switch (this.value) {
            case 'Gender':
                genderCriteriaGroup.style.display = 'block';
                document.getElementById('genderCriteria').name = 'filterCriteria';
                break;
            case 'BirthYear':
                filterValueGroup.style.display = 'block';
                document.getElementById('filterValue').name = 'filterValue';
                break;
            case 'PlaceOfBirth':
                placeOfBirthCriteriaGroup.style.display = 'block';
                document.getElementById('placeOfBirthCriteria').name = 'filterCriteria';
                break;
            case 'FullName':
                fullNameGroup.style.display = 'block';
                document.getElementById('fullName').name = 'filterValue';
                break;
        }
    });

    // Trigger change event to set initial visibility state
    document.getElementById('filterField').dispatchEvent(new Event('change'));
</script>
